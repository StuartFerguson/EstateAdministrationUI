name: Release

on:
  release:
    types: [published]

jobs:
  build:
    name: "Release"
    env:
        ASPNETCORE_ENVIRONMENT: "Production"

    runs-on: ubuntu-16.04

    steps:
    - uses: actions/checkout@v1

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.100

    - name: Restore Nuget Packages
      run: dotnet restore EstateAdministrationUI.sln --source https://api.nuget.org/v3/index.json --source https://www.myget.org/F/transactionprocessing/api/v3/index.json

    - name: Build Code
      run: dotnet build EstateAdministrationUI.sln --configuration Release

    #- name: Run Unit Tests
    #  run: |
    #    echo "ASPNETCORE_ENVIRONMENT are > ${ASPNETCORE_ENVIRONMENT}"
    #    dotnet test "EstateAdministrationUI.Tests\EstateAdministrationUI.Tests.csproj"   

    #- name: Build Docker Image
    #  run: docker build . --file EstateAdministrationUI/Dockerfile --tag estateadministrationui:latest
                
    #- name: Run Integration Tests
    #  run: dotnet test "EstateAdministrationUI.IntegrationTests\EstateAdministrationUI.IntegrationTests.csproj"
    
    - name: Publish Images to Docker Hub
      run: |
        docker login --username=${{ secrets.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }}
        docker push stuartferguson/estateadministrationui:latest
        docker push stuartferguson/estateadministrationui:${{ steps.get_version.outputs.VERSION }}
    
    - name: Publish Web Application
      run: dotnet publish "EstateAdministrationUI\EstateAdministrationUI.csproj" --configuration Release --output publishOutput

    - name: Setup .NET Core 2.0
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 2.0.0

    - name: Extract Octopus Tools
      run: |
        mkdir /opt/octo
        cd /opt/octo
        wget -O /opt/octo/octopus.zip https://download.octopusdeploy.com/octopus-tools/6.12.0/OctopusTools.6.12.0.portable.zip
        unzip /opt/octo/octopus.zip
        chmod +x /opt/octo/Octo
    - name: Pack Files for Octopus
      run: >-
        /opt/octo/Octo pack
        --outFolder /home/runner/work/EstateAdministrationUI/EstateAdministrationUI
        --basePath /home/runner/work/EstateAdministrationUI/EstateAdministrationUI/publishOutput
        --id EstateManagement
        --version ${{ steps.get_version.outputs.VERSION }}
        --format zip
        --verbose
        --logLevel=verbose
    
    - name: Push Package to Octopus
      run: >-
        /opt/octo/Octo push
        --server http://sferguson.ddns.net:9001
        --apiKey API-UTN58QCF8HSATACNUBY41XPUC
        --package /home/runner/work/EstateAdministrationUI/EstateAdministrationUI/EstateAdministrationUI.${{ steps.get_version.outputs.VERSION }}.zip
        --overwrite-mode IgnoreIfExists
    
    - name: Get Release
      id: getrelease
      uses: octokit/request-action@v1.x
      with:
          route: GET /repos/StuartFerguson/EstateAdministrationUI/releases/tags/${{ steps.get_version.outputs.VERSION }}
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Release Notes
      id: buildreleasenotes
      uses: gr2m/get-json-paths-action@v1.x
      with:
          json: ${{ steps.getrelease.outputs.data }}
          releasenote: "body"
    
    - name: Create & Deploy Release in Octopus
      run: >-
        /opt/octo/Octo create-release
        --server http://sferguson.ddns.net:9001
        --apiKey API-UTN58QCF8HSATACNUBY41XPUC
        --project "Estate Administration UI"
        --version ${{ steps.get_version.outputs.VERSION }}
        --channel Default
        --deployTo Development
        --waitfordeployment
        --deploymenttimeout 00:05:00
        --releasenotes "${{ steps.buildreleasenotes.outputs.releasenote }}"   
